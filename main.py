import telebot
from telebot import types

# –í–∞—à —Ç–æ–∫–µ–Ω, –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –æ—Ç @BotFather
API_TOKEN = '7552526610:AAGp2-U726U28Sel59SKTQdHbu7retdljqQ'

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = telebot.TeleBot(API_TOKEN)

# –£—á–∏—Ç–µ–ª—è –≤ –≥—Ä—É–ø–ø–∞—Ö
teachers_prog = {
    '–•–∞—Ä—á–µ–Ω–∫–æ –ù–∏–∫–∏—Ç–∞ –õ–µ–æ–Ω–∏–¥–æ–≤–∏—áüòé': '–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –≤–≤–µ–¥–µ–Ω–∏—è –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å –∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ Python.',
    '–ü—Ç–∞—à–∏–Ω—Å–∫–∏–π –ò–≥–æ—Ä—å –ê–Ω–¥—Ä–µ–µ–≤–∏—áüßîüèª‚Äç‚ôÇÔ∏è': '–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –∏—Å—Ç–æ—Ä–∏–∏ –∏ –æ–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏—è.',
    '–ß–∏—Ö–∞—á—ë–≤ –ê—Ä—Ç–µ–º –ê—Ä–∫–∞–¥—å–µ–≤–∏—áüßîüèª‚Äç‚ôÇÔ∏è‚òÅÔ∏è': '–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –ò–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞—Ä–∫–µ—Ç–∏–Ω–≥–∞.',
    '–ß–∏–Ω–¥—è–π–∫–∏–Ω–∞ –ú–∞—Ä–∏–Ω–∞ –°–µ—Ä–≥–µ–µ–≤–Ω–∞ü¶Ö': '–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω–æ–≥–æ —è–∑—ã–∫–∞',
    '–§–æ—Ñ–∞–Ω–æ–≤–∞ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–∞ –í–ª–∞–¥–∏–º–∏—Ä–æ–≤–Ω–∞': '–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –±–∏–æ–ª–æ–≥–∏–∏'
}

# –£—á–∏—Ç–µ–ª—è –≤ –≥—Ä—É–ø–ø–µ "–î–∏–∑–∞–π–Ω–µ—Ä—ã"
teachers_diz = {
    '–ü–æ—Ç—è–∫–∏–Ω–∞ –í–∞–ª–µ—Ä–∏—è –ê–Ω–¥—Ä–µ–µ–≤–Ω–∞üêà': '–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏, –û–ò–¢, –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∏.',
    '–ò–≥–Ω–∞—Ç–µ–Ω–∫–æ –ï–∫–∞—Ç–µ—Ä–∏–Ω–∞ –ê–ª–µ–∫—Å–µ–µ–≤–Ω–∞‚úùÔ∏è': '–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –∏—Å—Ç–æ—Ä–∏–∏ –∏—Å–∫—É—Å—Å—Ç–≤',
    '–ü—Ç–∞—à–∏–Ω—Å–∫–∏–π –ò–≥–æ—Ä—å –ê–Ω–¥—Ä–µ–µ–≤–∏—áüõêü§†': '–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –∏—Å—Ç–æ—Ä–∏–∏, –æ–±—â–µ—Å—Ç–≤–∞ –∏ –æ—Å–Ω–æ–≤ Photoshop adapt',
    '–ö–ª–∏–º–µ–Ω–∫–æ –ù–∞—Ç–∞–ª—å—è –í–∏–∫—Ç–æ—Ä–æ–≤–Ω–∞ü¶™üö∑üìµ': '–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –≥–µ–æ–≥—Ä–∞—Ñ–∏–∏',
    '–ú–∞–º–µ–¥–æ–≤–∞ –ù–∞—Ä–≥–∏–∑ –ú–µ—Ö–º–∞–Ω–æ–≤–Ω–∞üë©‚Äçüî¨': '–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å —Ö–∏–º–∏–∏',
    '–ß–∏–Ω–¥—è–π–∫–∏–Ω–∞ –ú–∞—Ä–∏–Ω–∞ –°–µ—Ä–≥–µ–µ–≤–Ω–∞ü¶Ö': '–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω–æ–≥–æ —è–∑—ã–∫–∞'
}


# –ö–æ–º–∞–Ω–¥–∞ /start
@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.reply_to(message, f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! –Ø —Ç–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫. –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?")


# –ö–æ–º–∞–Ω–¥–∞ /help
@bot.message_handler(commands=['help'])
def send_help(message):
    help_text = """
    –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
    /start - –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
    /help - –≠—Ç–∞ –ø–æ–º–æ—â—å
    /menu - –û—Ç–∫—Ä—ã—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é
    /teachers - –°–ø–∏—Å–æ–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π
    """
    bot.reply_to(message, help_text)


# –ö–æ–º–∞–Ω–¥–∞ /menu
@bot.message_handler(commands=['menu'])
def send_menu(message):
    menu_text = """
    –û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é:
    1. –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤
    2. –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –æ—Ç–∑—ã–≤—ã
    3. –£—á–µ–±–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã
    –í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç:
    """
    bot.reply_to(message, menu_text)


# –ö–æ–º–∞–Ω–¥–∞ /teachers
@bot.message_handler(commands=['teachers'])
def list_teachers(message):
    teachers_list = ""
    for group, teachers in zip(['–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç—ã', '–î–∏–∑–∞–π–Ω–µ—Ä—ã'], [teachers_prog, teachers_diz]):
        teachers_list += f"\n–ì—Ä—É–ø–ø–∞: {group}\n"
        for i, (name, desc) in enumerate(teachers.items()):
            teachers_list += f"{i + 1}. {name} - {desc}\n"

    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton('–ì–ª–∞–≤–Ω–∞—è', callback_data='home'))

    bot.reply_to(message, f"–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏:\n{teachers_list}", reply_markup=markup)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏
@bot.callback_query_handler(func=lambda q: q.data == 'home')
def teachers_home(query):
    bot.edit_message_text("–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.", query.message.chat.id, query.message.message_id,
                          query.message.reply_markup)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(func=lambda message: True)
def echo_all(message):
    bot.reply_to(message, "–ù–µ –ø–æ–Ω—è–ª –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.")


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    bot.infinity_polling()